// correspondence.h
// (c) 07/2006, Daniel Westhoff 
// westhoff@informatik.uni-hamburg.de

#ifndef _CORRESPONDENCE_H_
#define _CORRESPONDENCE_H_

#include "math/vec.h"
#include "iotypes.h"

/**
 * @ingroup Localization
 * @brief Klasse mit Algorithmen zur Auflösung des Korrespondenz-Problems
 * zwischen bekannten Lasermarken und gemessenen Marken.
 *
 * @section author Author
 *   Daniel Westhoff (westhoff@informatik.uni-hamburg.de)
 * @section date Copyright
 *   (c) 2000-2002
 */
class CCORRESPONDENCE
{
 public:

  ////////////////////////////////////////////////////////////////////////////////////////////
  /// Konstruktor.
  ////////////////////////////////////////////////////////////////////////////////////////////

  CCORRESPONDENCE (const int numOfKnownMarks, 
		   const float* knownMarkX, 
		   const float* knownMarkY);

  ////////////////////////////////////////////////////////////////////////////////////////////
  /// Destruktor.
  ////////////////////////////////////////////////////////////////////////////////////////////

  virtual ~CCORRESPONDENCE (void);

  ////////////////////////////////////////////////////////////////////////////////////////////
  /// Die bekannten Marken auf 'stdout' ausgeben.
  ////////////////////////////////////////////////////////////////////////////////////////////

  void PrintKnownMarks (void) const;

  ////////////////////////////////////////////////////////////////////////////////////////////
  /// Liefert zu einer Lasermessung (Distanz und Winkel) die Distanz und den Winkel
  /// der zugeordneten bekannten Marke.
  ////////////////////////////////////////////////////////////////////////////////////////////

  bool MarkMatched (const CVEC &pose, 
		    const millimeter_t &distance, 
		    const radiant_t &angle,
		    millimeter_t &knownMarkDist,
		    radiant_t &knownmarkAngle); 

 private:

  ////////////////////////////////////////////////////////////////////////////////////////////
  /// Anzahl der bekannten Marken
  ////////////////////////////////////////////////////////////////////////////////////////////
  
  int _numOfKnownMarks;

  ////////////////////////////////////////////////////////////////////////////////////////////
  /// x-Koordinaten der bekannten Marken
  ////////////////////////////////////////////////////////////////////////////////////////////

  float* _knownMarkX;
  
  ////////////////////////////////////////////////////////////////////////////////////////////
  /// y-Koordinaten der bekannten Marken
  ////////////////////////////////////////////////////////////////////////////////////////////

  float* _knownMarkY;

};

#endif
